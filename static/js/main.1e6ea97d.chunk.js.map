{"version":3,"sources":["Components/CLock/Clock.tsx","App.tsx","index.tsx"],"names":["Clock","state","date","Date","timerId","this","window","setInterval","setState","console","log","prevProps","name","props","clearInterval","className","toLocaleTimeString","Component","getRandomName","value","Math","random","toString","slice","App","hasClock","clockName","hideClock","revealClock","document","addEventListener","removeEventListener","ReactDOM","render","getElementById"],"mappings":"6MAOaA,EAAb,4MACEC,MAAQ,CACNC,KAAM,IAAIC,MAFd,EAKEC,QAAU,EALZ,uDAOE,WAAqB,IAAD,OAClBC,KAAKD,QAAUE,OAAOC,aAAY,WAChC,EAAKC,SAAS,CAAEN,KAAM,IAAIC,OAC1BM,QAAQC,IAAI,EAAKT,MAAMC,QACtB,OAXP,gCAcE,SAAmBS,GACbA,EAAUC,OAASP,KAAKQ,MAAMD,MAChCH,QAAQC,IAAR,uBAA4BC,EAAUC,KAAtC,eAAiDP,KAAKQ,MAAMD,SAhBlE,kCAoBE,WACEN,OAAOQ,cAAcT,KAAKD,WArB9B,oBAwBE,WACE,IAAQF,EAASG,KAAKJ,MAAdC,KAER,OACE,sBAAKa,UAAU,QAAf,UACE,wBAAQA,UAAU,cAAlB,SACGV,KAAKQ,MAAMD,OAGb,YAED,sBAAMG,UAAU,cAAhB,SACGb,EAAKc,8BApChB,GAA2BC,aCH3B,SAASC,IACP,IAAMC,EAAQC,KAAKC,SAASC,WAAWC,MAAM,EAAG,GAEhD,MAAM,SAAN,OAAgBJ,GAGX,IAAMK,EAAb,4MACEvB,MAAQ,CACNwB,UAAU,EACVC,UAAWR,KAHf,EAMEd,QAAU,EANZ,EAqBEuB,UAAY,WACV,EAAKnB,SAAS,CAAEiB,UAAU,KAtB9B,EAyBEG,YAAc,WACZ,EAAKpB,SAAS,CAAEiB,UAAU,KA1B9B,uDAQE,WAAqB,IAAD,OAClBI,SAASC,iBAAiB,cAAezB,KAAKsB,WAC9CE,SAASC,iBAAiB,QAASzB,KAAKuB,aACxCvB,KAAKD,QAAUE,OAAOC,aAAY,WAChC,EAAKC,SAAS,CAAEkB,UAAWR,QAC1B,QAbP,kCAgBE,WACEW,SAASE,oBAAoB,cAAe1B,KAAKsB,WACjDE,SAASE,oBAAoB,QAAS1B,KAAKuB,eAlB/C,oBA6BE,WACE,MAAgCvB,KAAKJ,MAA7ByB,EAAR,EAAQA,UAAWD,EAAnB,EAAmBA,SAEnB,OACE,sBAAKV,UAAU,MAAf,UACE,6CAECU,GACC,cAAC,EAAD,CAAOb,KAAMc,WArCvB,GAAyBT,aCPzBe,IAASC,OACP,cAAC,EAAD,IACAJ,SAASK,eAAe,W","file":"static/js/main.1e6ea97d.chunk.js","sourcesContent":["/* eslint-disable no-console */\nimport { Component } from 'react';\n\ntype Props = {\n  name: string;\n};\n\nexport class Clock extends Component<Props, {}> {\n  state = {\n    date: new Date(),\n  };\n\n  timerId = 0;\n\n  componentDidMount() {\n    this.timerId = window.setInterval(() => {\n      this.setState({ date: new Date() });\n      console.log(this.state.date);\n    }, 1000);\n  }\n\n  componentDidUpdate(prevProps: Props) {\n    if (prevProps.name !== this.props.name) {\n      console.log(`Renamed from ${prevProps.name} to ${this.props.name}`);\n    }\n  }\n\n  componentWillUnmount() {\n    window.clearInterval(this.timerId);\n  }\n\n  render() {\n    const { date } = this.state;\n\n    return (\n      <div className=\"Clock\">\n        <strong className=\"Clock__name\">\n          {this.props.name}\n        </strong>\n\n        {' time is '}\n\n        <span className=\"Clock__time\">\n          {date.toLocaleTimeString()}\n        </span>\n      </div>\n    );\n  }\n}\n","import { Component } from 'react';\nimport './App.scss';\nimport { Clock } from './Components/CLock';\n\nfunction getRandomName(): string {\n  const value = Math.random().toString().slice(2, 6);\n\n  return `Clock-${value}`;\n}\n\nexport class App extends Component {\n  state = {\n    hasClock: true,\n    clockName: getRandomName(),\n  };\n\n  timerId = 0;\n\n  componentDidMount() {\n    document.addEventListener('contextmenu', this.hideClock);\n    document.addEventListener('click', this.revealClock);\n    this.timerId = window.setInterval(() => {\n      this.setState({ clockName: getRandomName() });\n    }, 3300);\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener('contextmenu', this.hideClock);\n    document.removeEventListener('click', this.revealClock);\n  }\n\n  hideClock = () => {\n    this.setState({ hasClock: false });\n  };\n\n  revealClock = () => {\n    this.setState({ hasClock: true });\n  };\n\n  render() {\n    const { clockName, hasClock } = this.state;\n\n    return (\n      <div className=\"App\">\n        <h1>React clock</h1>\n\n        {hasClock && (\n          <Clock name={clockName} />\n        )}\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}